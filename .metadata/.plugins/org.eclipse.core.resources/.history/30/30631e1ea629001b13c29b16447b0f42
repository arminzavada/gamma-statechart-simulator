package com.triad.school.gamma.simulator.query

import "http://www.mit.bme.hu/gamma/statechart/Model/Statechart"
import "http://www.mit.bme.hu/gamma/statechart/Model/Interface"
import "http://www.triad.com/school/gamma/simulator/active_state"

pattern activeState(state: StateNode) {
	ActiveStateContainer(container);
	ActiveStateContainer.activeState(container, state);
}

pattern ports(port: Port) {
	Port.interfaceRealization(port, interfaceRealization);
	InterfaceRealization.interface(interfaceRealization, interface);
}

pattern initialNode(state: InitialState) {
	InitialState(state);
}

pattern nonTriggerTransition(source: StateNode, transition: Transition, target: StateNode) {
	Transition.sourceState(transition, source);
	Transition.targetState(transition, target);
	
	find activeState(source);
	
	Transition.trigger(transition, trigger);
	check(trigger == null);
}